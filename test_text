
def execute_query(query, creds, params=None, fetch_one=False):
    """
    Executes a SQL query on a PostgreSQL database with optional parameters.
    Args:
    - query: SQL query string.
    - creds: Dictionary containing database credentials.
    - params: Tuple of parameters for the SQL query (optional).
    - fetch_one: Boolean indicating whether to fetch only one record from the query results
    Retuns:
    - if fetch_one is True, returns a single record or None
    - if fetch_one is False, returns the number of affected rows.
    """
    conn = psycopg2.connect(database=creds['db'], user=creds['username'], password=creds['password'], host=creds['host'], port=creds['port'])
    cur = conn.cursor()

    try:
        if params:
            cur.execute(query, params)
        else:
            cur.execute(query)

        if fetch_one:
            result = cur.fetchone()
        else:
            conn.commit()
            result = cur.rowcount
    finally:
        cur.close()
        conn.close()
    return result


# insert starting job entry into the aws glue job log table.
    logger.info("Start: Insert job start entry into aws_glue_job_log")
    job_start_dtm = datetime.now(NY_TZ).strftime("%Y-%m-%d %H:%M:%S")
    strt_log_qry = f"insert into kwdm.aws_glue_job_log(job_name, start_time, job_status) values('{args['JOB_NAME']}', '{job_start_dtm}','started');"
    execute_query(strt_log_qry, cdm_creds)
    logger.info("End: Insert job start entry into aws_glue_job_log")

    # insert ending job entry into the aws glue job log table.
    logger.info("Start: Update job end entry in aws_glue_job_log")
    job_end_dtm = datetime.now(NY_TZ).strftime("%Y-%m-%d %H:%M:%S")
    end_log_qry = f"update kwdm.aws_glue_job_log set source_count=null, insert_count= null, update_count=null, delete_count=null, comments= 'this week folder name: {this_week_fldr}; success_files: {success_files_str}; failed_files: {failed_files_str}', end_time='{job_end_dtm}', job_status='completed' where job_name='{args['JOB_NAME']}' and start_time='{job_start_dtm}';"
    execute_query(end_log_qry, cdm_creds)
    logger.info("End: Update job end entry in aws_glue_job_log")
