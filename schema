root
 |-- active_ingredients: array (nullable = true)
 |    |-- element: struct (containsNull = true)
 |    |    |-- name: string (nullable = true)
 |    |    |-- strength: string (nullable = true)
 |-- application_number: string (nullable = true)
 |-- brand_name: string (nullable = true)
 |-- brand_name_base: string (nullable = true)
 |-- brand_name_suffix: string (nullable = true)
 |-- dea_schedule: string (nullable = true)
 |-- dosage_form: string (nullable = true)
 |-- finished: boolean (nullable = true)
 |-- generic_name: string (nullable = true)
 |-- labeler_name: string (nullable = true)
 |-- listing_expiration_date: string (nullable = true)
 |-- marketing_category: string (nullable = true)
 |-- marketing_end_date: string (nullable = true)
 |-- marketing_start_date: string (nullable = true)
 |-- openfda: struct (nullable = true)
 |    |-- is_original_packager: array (nullable = true)
 |    |    |-- element: boolean (containsNull = true)
 |    |-- manufacturer_name: array (nullable = true)
 |    |    |-- element: string (containsNull = true)
 |    |-- nui: array (nullable = true)
 |    |    |-- element: string (containsNull = true)
 |    |-- pharm_class_cs: array (nullable = true)
 |    |    |-- element: string (containsNull = true)
 |    |-- pharm_class_epc: array (nullable = true)
 |    |    |-- element: string (containsNull = true)
 |    |-- pharm_class_moa: array (nullable = true)
 |    |    |-- element: string (containsNull = true)
 |    |-- pharm_class_pe: array (nullable = true)
 |    |    |-- element: string (containsNull = true)
 |    |-- rxcui: array (nullable = true)
 |    |    |-- element: string (containsNull = true)
 |    |-- spl_set_id: array (nullable = true)
 |    |    |-- element: string (containsNull = true)
 |    |-- unii: array (nullable = true)
 |    |    |-- element: string (containsNull = true)
 |    |-- upc: array (nullable = true)
 |    |    |-- element: string (containsNull = true)
 |-- packaging: array (nullable = true)
 |    |-- element: struct (containsNull = true)
 |    |    |-- description: string (nullable = true)
 |    |    |-- marketing_end_date: string (nullable = true)
 |    |    |-- marketing_start_date: string (nullable = true)
 |    |    |-- package_ndc: string (nullable = true)
 |    |    |-- sample: boolean (nullable = true)
 |-- pharm_class: array (nullable = true)
 |    |-- element: string (containsNull = true)
 |-- product_id: string (nullable = true)
 |-- product_ndc: string (nullable = true)
 |-- product_type: string (nullable = true)
 |-- route: array (nullable = true)
 |    |-- element: string (containsNull = true)
 |-- spl_id: string (nullable = true)


exploded_df = df.withColumn("packaging", explode("packaging"))

# Selecting fields and flattening the structure
flattened_df = exploded_df.select(
    col("product_id"),
    col("product_ndc"),
    col("product_type"),
    col("application_number"),
    col("brand_name"),
    col("brand_name_base"),
    col("brand_name_suffix"),
    col("generic_name"),
    col("dosage_form"),
    col("labeler_name"),
    col("marketing_category"),
    col("dea_schedule"),
    col("finished"),
    col("marketing_start_date"),
    col("marketing_end_date"),
    col("listing_expiration_date"),
    col("packaging.description").alias("packaging_description"),
    col("packaging.marketing_end_date").alias("packaging_marketing_end_date"),
    col("packaging.marketing_start_date").alias("packaging_marketing_start_date"),
    col("packaging.package_ndc").alias("package_ndc"),
    col("packaging.sample").alias("sample"),
    col("route"),
    col("spl_id"),
    col("openfda.manufacturer_name").alias("manufacturer_name"),
    col("openfda.rxcui").alias("rxcui"),
    col("openfda.unii").alias("unii"),
    col("openfda.spl_set_id").alias("spl_set_id"),
    col("openfda.pharm_class_cs").alias("pharm_class_cs"),
    col("openfda.pharm_class_epc").alias("pharm_class_epc"),
    col("openfda.pharm_class_moa").alias("pharm_class_moa"),
    col("openfda.pharm_class_pe").alias("pharm_class_pe"),
    col("openfda.upc").alias("upc")
)

# Show the flattened structure for verification
flattened_df.show()